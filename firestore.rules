rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only manage their own profile
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null && request.auth.uid == userId;
    }

    // Posts collection: public read, authenticated write
    match /posts/{postId} {
      allow read: if true;  // Publicly readable
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.authorId;
    }

    // Comments subcollection (under posts/{postId}/comments)
    match /posts/{postId}/comments/{commentId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Private user data (like payment info) - strict access
    match /private/{userId}/data/{document} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Fallback rule - DENY ALL by default
    match /{document=**} {
      allow read, write: if true;
    }
  }
}